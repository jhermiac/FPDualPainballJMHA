<configuration>

	<!-- VARIABLE ASOCIADA A LA FECHA -->
	<timestamp key="logDateVar" datePattern="dd-MM-yyyy" />

	<appender name="DesafioLogback"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<!-- NOMBRE DEL FICHERO EN EL QUE DESEMBOCA LA TUBERÍA -->
		<file>C://dev//logs//elb1JMHA-${logDateVar}.log</file>

		<!-- POLÍTICA CON LA QUE TROCEAMOS O GESTIONAMOS EL FICHERO -->
		<rollingPolicy
			class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>C://dev//logs//elb1JMHA-${logDateVar}.%i.logDual.zip
			</fileNamePattern>

			<!-- CANTIDAD DE FICHEROS (TROCEADOS) -->
			<minIndex>1</minIndex>
			<maxIndex>3</maxIndex>
		</rollingPolicy>

		<!-- ¿CADA CUÁNTO DEBE SALTAR LA POLÍTICA DE TROCEADO? -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>50KB</maxFileSize>
		</triggeringPolicy>

		<!-- ¿CÓMO QUIERO QUE SE PINTE LA INFORMACIÓN DEL FICHERO (TRAZA/LOG)? -->
		<!-- AQUÍ PODRIAMOS TENER UN LAYOUT PERSONALIZADO EN UNA CLASE JAVA (EJEMPLO 
			2) -->
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - [%method]
				- %msg%n</pattern>
		</encoder>
	</appender>

	<!-- LOGGER ROOT (CONFIGURADO AL NIVEL INFO SALE POR TUBERIA...) -->
	<!-- EL NIVEL DETERMINA LA ESTRECHA QUE PUEDA SER LA TUBERÍA -->

	<root level="trace">
		<appender-ref ref="DesafioLogback" />
	</root>


</configuration>